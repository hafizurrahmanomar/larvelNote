//Controllers/CategoryController.php==Code here===

<?php

namespace App\Http\Controllers;

use App\Models\Category;

use Illuminate\Http\Request;
use Symfony\Contracts\Service\Attribute\Required;

class CategoryController extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {

    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        return view('category.create');
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {


        $request->validate([
            'category_name'=> 'required |string|alpha',
            'category_slug'=> 'required |string|alpha',
            'is_active' => 'nullable',

        ]);

       dd($request->all());

      Category::create([
        'name' => $request->category_name,
        'slug' => $request->category_slug,
        'is_active'=> $request->filled ('is_active'),
      ]);

      return back();

    }

    /**p-
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        //
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function edit($id)
    {
        //
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, $id)
    {
        //
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
        //
    }

    /**
     */
    public function __construct() {
    }
}


//===========Models/Category.php =========code here========

<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class Category extends Model
{
    use HasFactory;

    protected $fillable = [

        'name',
        'slug',
        'is_active',
    ];
}


//create.blade.php============

@extends('master')

{{--  title /no used "@endsection" --}}
@section('title',"create catergory")


@section('content')

<div class="row">

    <div class="col-8 m-auto">
        {{-- Store function of  CategoryController.php than by Post method Data store here and @csrf token must be add --}}
        <form action="{{ route('category.store') }}" method="POST">
        @csrf
            {{-- this code copy form bootstape --}}
            {{-- Database input --}}
            <div class="mb-3">
                <label for="category_name" class="form-label">Category Name</label>

                <input type="text" class="form-control @error('category_name')

                is-invalid

                @enderror" id="category_name" name="category_name" placeholder="Category Name inpout here">
              </div>

              {{-- invalid data erorr code --}}
              @error('category_name')
              <span class="invalid-feedback" role="alert">
                <strong>{{$message}}</strong>
            </span>
              @enderror


                {{-- for data slug --}}
              <div class="mb-3">
                <label for="category_slug" class="form-label">Category slug</label>

                <input type="text" class="form-control @error("category_slug")
                is-invalid
                @enderror" id="category_slug" name="category_slug" placeholder="Category slug inpout here">
              </div>

              {{-- invalid data erorr code --}}
              @error('category_slug')
              <span class="invalid-feedback" role="alert">
                <strong>{{ $message }}</strong>
            </span>
              @enderror



              {{-- checkbox for active or inactive check --}}
              <div class="form-check mb-3">
                <input class="form-check-input" type="checkbox" name="is_active" id="flexCheckDefault">
                <label class="form-check-label" for="flexCheckDefault">
                  Active/Inactive
                </label>
              </div>


              <button type="submit" class="btn btn-primary">Submit</button>


        </form>
    </div>
</div>

@endsection
